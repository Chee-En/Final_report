#include "xparameters.h"
#include "xuartlite.h"
#include "xil_printf.h"
#include "xuartlite_l.h"

#define UART_DEVICE_ID XPAR_UARTLITE_0_DEVICE_ID

XUartLite Uart;
void delay_loop(int count);


#include "xparameters.h"
#include "xuartlite.h"
#include "xil_printf.h"
#include <string.h>
#include <stdlib.h>

#define UARTLITE_DEVICE_ID	XPAR_UARTLITE_0_DEVICE_ID
#define BUFFER_SIZE 16

XUartLite Uart;

int main() {
    XUartLite_Initialize(&Uart, UARTLITE_DEVICE_ID);
    xil_printf("=== UART 16-bit Value Receive ===\r\n");

    char buf[BUFFER_SIZE];
    int idx = 0;

    while (1) {
        if (!XUartLite_IsReceiveEmpty(Uart.RegBaseAddress)) {
            char c = XUartLite_RecvByte(Uart.RegBaseAddress);
            xil_printf("%c", c);  // echo 回傳字元（除錯用）

            if (c == '\n' || c == '\r') {
                buf[idx] = '\0';  // 補結尾
                int value = atoi(buf);  // 將字串轉成整數
                xil_printf("\r\n✅ Received 16-bit value: %d\r\n", value);
                idx = 0;
            } else if (idx < BUFFER_SIZE - 1) {
                buf[idx++] = c;
            } else {
                idx = 0;  // buffer overflow 重來
            }
            delay_loop(1000);
        }
    }

    return 0;
}





void delay_loop(int count) {
    volatile int i;
    for (i = 0; i < count * 1000; i++);  // 調整倍率
}
