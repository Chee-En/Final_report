#include "xparameters.h"
#include "xuartlite.h"
#include "xil_printf.h"
#include "xuartlite_l.h"
#include <stdio.h>
#include <stdlib.h>
#include "xuartps.h"

// 修改成你實際的 UART instance ID
#define UART_ARDUINO_DEVICE_ID XPAR_UARTLITE_1_DEVICE_ID

XUartLite UartPC;
XUartLite UartArduino;

int main() {
    XUartLite_Initialize(&UartPC, UART_PC_DEVICE_ID);
    XUartLite_Initialize(&UartArduino, UART_ARDUINO_DEVICE_ID);

    xil_printf("=== Dual UART Receiver ===\r\n");
    xil_printf("UART0 for PC commands (send 'p' to stop)\r\n");
    xil_printf("UART1 for Arduino 16-bit binary stream\r\n");

    FILE *fp = fopen("audio.bin", "wb");
    if (!fp) {
        xil_printf("Error: Cannot open file.\r\n");
        return -1;
    }

    int running = 1;

    while (running) {
        // === UART0: 檢查是否有從 PC 收到命令 ===
        if (XUartPs_IsReceivData(STDIN_BASEADDRESS)) {
            char cmd = getchar();
            if (cmd == 'p') {
//                xil_printf("Stop command received from PC UART.\r\n");
                running = 0;
                break;
            }
        }

        // === UART1: 接收來自 Arduino 的 16-bit 資料 ===
        if (XUartLite_IsReceiveEmpty(UartArduino.RegBaseAddress) == 0) {
            uint8_t lsb = XUartLite_RecvByte(UartArduino.RegBaseAddress);
            while (XUartLite_IsReceiveEmpty(UartArduino.RegBaseAddress));  // 等待下一個 byte
            uint8_t msb = XUartLite_RecvByte(UartArduino.RegBaseAddress);

            uint16_t value = ((uint16_t)msb << 8) | lsb;
            fputc(lsb, fp);
            fputc(msb, fp);
            fflush(fp);

            xil_printf("Arduino Data: %d (0x%04X)\r\n", value, value);
        }
    }

    fclose(fp);
    xil_printf("File saved as audio.bin. Program finished.\r\n");
    return 0;
}
