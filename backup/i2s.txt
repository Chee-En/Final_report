`timescale 1ns / 1ps

module i2s_left_justified_decoder #(
    parameter DATA_WIDTH = 16
)(
    input wire clk,          // 系統時鐘（可與 BCLK 同步）
    input wire rstn,         // 非同步 reset，低有效

    input wire i2s_bclk,     // I2S Bit Clock
    input wire i2s_ws,       // I2S Word Select（0：左聲道，1：右聲道）
    input wire i2s_sd,       // I2S Serial Data

    output reg [DATA_WIDTH-1:0] audio_data = 0,
    output reg audio_valid = 0
);

    reg [DATA_WIDTH-1:0] shift_reg = 0;
    reg [5:0] bit_cnt = 0;
    reg prev_ws = 1;
    reg prev_bclk = 0;
    wire bclk_rising = (i2s_bclk && !prev_bclk);

    always @(posedge clk) begin
        prev_ws <= i2s_ws;
        prev_bclk <= i2s_bclk;

        audio_valid <= 0;

        if (!rstn) begin
            shift_reg <= 0;
            bit_cnt <= 0;
            audio_data <= 0;
            audio_valid <= 0;
        end
        else if (bclk_rising) begin
            // Detect start of left channel (WS falling edge)
            if (prev_ws == 1 && i2s_ws == 0) begin
                bit_cnt <= 0;
            end

            if (i2s_ws == 0) begin  // 左聲道
                if (bit_cnt < DATA_WIDTH) begin
                    shift_reg <= {shift_reg[DATA_WIDTH-2:0], i2s_sd};
                    bit_cnt <= bit_cnt + 1;
                    if (bit_cnt == DATA_WIDTH - 1) begin
                        audio_data <= {shift_reg[DATA_WIDTH-2:0], i2s_sd};
                        audio_valid <= 1;
                    end
                end
            end
        end
    end
endmodule
