`timescale 1ns / 1ps

module top_i2s_with_led (
    input wire clk,
    input wire rstn,

    // I2S 接口
    input wire i2s_bclk,
    input wire i2s_ws,
    input wire i2s_sd,

    // Debug 用 LED
    output wire [3:0] led
);

    wire [15:0] audio_data;
    wire        audio_valid;

    // 假設這是你自製的解碼器模組
    i2s_left_justified_decoder decoder (
        .clk(clk),
        .rstn(rstn),
        .i2s_bclk(i2s_bclk),
        .i2s_ws(i2s_ws),
        .i2s_sd(i2s_sd),
        .audio_data(audio_data),
        .audio_valid(audio_valid)
    );
    reg [25:0] clk_div = 0;  // 大約每 0.67 秒除一次 (50_000_000 cycles)
    reg        slow_clk = 0;

    always @(posedge clk) begin
        if (!rstn) begin
            clk_div   <= 0;
            slow_clk  <= 0;
        end else if (clk_div >= 5_000_000) begin
            clk_div   <= 0;
            slow_clk  <= ~slow_clk;  // 這樣是約 1Hz
        end else begin
            clk_div <= clk_div + 1;
        end
    end
    // 將資料低位輸出到 LED
    reg [3:0] led_reg = 0;

    always @(posedge slow_clk or negedge rstn) begin
        if (!rstn)
            led_reg <= 0;
        else if (audio_valid)
            led_reg <= audio_data[3:0];  // 也可以用 [3:0] 測試不同區段
    end

    assign led = led_reg;

endmodule

